>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided(matrix, "h")
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided([[2, "h", (1,2), 5],[1, 2, 3]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], [1, 2]], 1)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> len(__import__("2-matrix_divided").matrix_divided.__doc__) > 0
True
>>> matrix_divided([5], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, -1)
[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]
>>> from os import system
>>> system("pep8 2-matrix_divided.py")
0
>>> len(__import__("2-matrix_divided").matrix_divided.__doc__) > 0
True
>>> len(__import__("2-matrix_divided").__doc__) > 0
True
